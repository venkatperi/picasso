apply plugin: 'java'
apply plugin: 'maven'
description = 'Picasso'

configurations {
  provided
}

sourceSets {
  main.compileClasspath += configurations.provided
  test.compileClasspath += configurations.provided
  test.runtimeClasspath += configurations.provided
}

dependencies {
    provided 'com.google.android:android:4.4.2'
    compile group: 'com.squareup.okhttp', name: 'okhttp', version:'1.3.0'
    //provided group: 'com.intellij', name: 'annotations', version:'9.0.4'
    provided 'com.intellij:annotations:12.0'

    //testCompile group: 'junit', name: 'junit', version:'4.10'
    //testCompile group: 'org.easytesting', name: 'fest-assert-core', version:'2.0M10'
    //testCompile group: 'com.squareup', name: 'fest-android', version:'1.0.6'
    //testCompile group: 'org.robolectric', name: 'robolectric', version:'2.2'
    //testCompile group: 'org.mockito', name: 'mockito-core', version:'1.9.5'
    //testCompile group: 'com.google.mockwebserver', name: 'mockwebserver', version:'20130505'
}


ext {
  artifactId = "picasso"
  artifactVersion = prop( 'versionName' )
  artifactVersionSuffix = "-SNAPSHOT"
}

if ( hasProperty( 'ec2Nexus' ) ) {
  uploadArchives {
    repositories {
      mavenDeployer {
        pom {
          artifactId = project.artifactId
          version = "${project.artifactVersion}${project.artifactVersionSuffix}"
        }
        repository( url: ec2Nexus ) {
          authentication( userName: ec2NexusUsername, password: ec2NexusPassword )
        }
        snapshotRepository( url: ec2NexusSnapshots ) {
          authentication( userName: ec2NexusUsername, password: ec2NexusPassword )
        }
      }
    }
  }
}

